name: Validate terraform fmt
on:
  pull_request:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    name: terraform fmt check
    outputs:
      CHECK_STATUS: ${{ steps.fmt_check.outputs.check_status }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Fetch changed files
        id: pr_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "space-delimited"
      - name: Configure terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4
      - name: Validate terraform fmt (added_modified)
        id: fmt_check
        run: |
          set +e
          CHECK_STATUS=0

          for changed_file in ${{ steps.pr_files.outputs.added_modified }}; do
            echo "Checking terraform fmt on ${changed_file}..."

            if [[ $changed_file == *.tf ]]; then
              terraform fmt -check $changed_file
              FMT_STATUS=$?

              if [[ $FMT_STATUS -ne 0 ]]; then
                echo "terraform fmt failed - ${changed_file}" >> $GITHUB_STEP_SUMMARY
                CHECK_STATUS=1
              fi
            fi
          done
          
          echo "check_status=$CHECK_STATUS" >> $GITHUB_OUTPUT
      - name: Process check
        if: always()
        run: exit ${{ steps.fmt_check.outputs.check_status }}

  terraform-validate:
    runs-on: ubuntu-latest
    name: terraform validate
    steps:
      - uses: actions/checkout@v3
      - name: Configure terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan
        run: terraform plan
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  tflint:
    runs-on: ubuntu-latest
    name: tflint check
    steps:
      - uses: actions/checkout@v3
      - name: Cache plugin dir
        uses: actions/cache@v3
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.44.1
      - name: Show version
        run: tflint --version
      - name: Init TFLint
        run: tflint --init
      - name: Run TFLint
        run: tflint -f compact
